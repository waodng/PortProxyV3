<?xml version="1.0" encoding="utf-8"?>

<!--
${tempdir:dir=port-proxy} 临时目录
-->

<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
	autoReload="true"
	throwExceptions="false"
	internalLogLevel="Info" internalLogFile="logs/log-internal.log">

	<variable name="logDirectory" value="logs/${shortdate}" />
	<targets>
		<target xsi:type="ColoredConsole" name="console"
				useDefaultRowHighlightingRules="true">
			<layout>
				<text>${time} ${level} ${aspnet-core-traceid} ${logger} ${all-event-properties} ${message} ${onexception:${newline}${exception:format=toString,Data:maxInnerExceptionLevel=10:innerFormat=toString,Data}}</text>
			</layout>
		</target>
		<target
			name="asyncinfo"
			xsi:type="AsyncWrapper"
			queueLimit="50000"
			timeToSleepBetweenBatches="0"
			batchSize="500"
			overflowAction="Grow">

			<target name="info" xsi:type="File" fileName="${logDirectory}.log"
					KeepFileOpen="true"
					encoding="utf-8">
				<layout xsi:type="SimpleLayout">
					<text>${time} ${level} ${aspnet-core-traceid} ${logger} ${all-event-properties} ${message} ${onexception:${newline}${exception:format=toString,Data:maxInnerExceptionLevel=10:innerFormat=toString,Data}}</text>
				</layout>
			</target>
		</target>
		<target
			name="asyncwarning"
			xsi:type="AsyncWrapper"
			queueLimit="2000"
			timeToSleepBetweenBatches="0"
			batchSize="200"
			overflowAction="Discard">
			<target name="warning" xsi:type="File" fileName="${logDirectory}_warning.txt"
					encoding="utf-8">
				<layout xsi:type="SimpleLayout">
					<text>
						<![CDATA[
============================================${counter}
时间		${time}
事件ID	${event-properties:item=EventId_Id}
级别		${level}
位置		${callsite}:${callsite-linenumber}
参数		${all-event-properties}
信息		${message}
异常
${exception:format=toString,Data:maxInnerExceptionLevel=10:innerFormat=toString,Data}

堆栈
${stacktrace}

${aspnet-core-all:includebody=5192}
============================================
]]>
					</text>
				</layout>
			</target>
		</target>

		<target
			name="asyncerror"
				xsi:type="AsyncWrapper"
				queueLimit="2000"
				timeToSleepBetweenBatches="0"
				batchSize="200"
				overflowAction="Discard">
			<target name="error" xsi:type="File" fileName="${logDirectory}_error.txt"
					encoding="utf-8">
				<layout xsi:type="SimpleLayout">
					<text>
						<![CDATA[
============================================${counter}
时间		${time}
事件ID	${event-properties:item=EventId_Id}
级别		${level}
位置		${callsite}:${callsite-linenumber}
参数		${all-event-properties}
信息		${message}
异常
${exception:format=toString,Data:maxInnerExceptionLevel=10:innerFormat=toString,Data}

堆栈
${stacktrace}

${aspnet-core-all:includebody=5192}
============================================
]]>
					</text>
				</layout>
			</target>
		</target>
		<target xsi:type="Null" name="blackhole" />
	</targets>

	<rules>
		<!-- add your logging rules here -->

		<!--
            Write all events with minimal level of Debug (So Debug, Info, Warn, Error and Fatal, but not Trace)  to "f"
            <logger name="*" minlevel="Debug" writeTo="f" />
        -->
		<logger name="Microsoft.*" minlevel="Trace" writeTo="blackhole" final="true" />
		<logger name="*" minlevel="Info" writeTo="asyncinfo" />
		<logger name="*" minlevel="Error" writeTo="asyncerror" />
		<logger name="*" level="Warn" writeTo="asyncwarning" />
	</rules>
</nlog>